type Query {
  links: [Link!]!
  getUser: [User!]!
  getRisk: [Risk!]!
  getRiskById(id: ID!): Risk!
}

type Mutation {
  postLink(url: String!, description: String!): Link!
  editLink(id: ID!, url: String!, description: String!): Link!
  deleteLink(id: ID!): Link!
  postRisk(name: String!, value: Int!): Risk!
  editRisk(id: ID!, name: String!, value: Int!): Risk!
  deleteRisk(id: ID!): Risk!
  # protect with token AuthPayload
  signup(email: String!, password: String!, name: String!): AuthPayload
  login(email: String!, password: String!): AuthPayload
  
}

type AuthPayload {
  token: String
  user: User
}

type User {
  id: ID!
  name: String!
  email: String!
  links: [Link!]!
  risk: [Risk!]!
}

type Risk {
  id: ID!
  name: String!
  value: Int!
  postedBy: User
}

type Link {
  id: ID!
  description: String!
  url: String!
  postedBy: User
}